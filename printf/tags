Mlibftprintf	libftprintf.c	/^int main()$/
allocat_tab	libft/ft_split.c	/^static	char	**allocat_tab(char const *s, char c, i/
allocate_string	libft/ft_split.c	/^static char	**allocate_string(char	**tab, char con/
calc_per	libftprintf.c	/^int	calc_per(const char *s)$/
free_tab	libft/ft_split.c	/^static char	**free_tab(char **tab, int size)$/
ft_atoi	libft/ft_atoi.c	/^int	ft_atoi(const char *str)$/
ft_bzero	libft/ft_bzero.c	/^void	ft_bzero(void *s, size_t n)$/
ft_calclenght	libft/ft_atoi.c	/^static long long	ft_calclenght(const char *str)$/
ft_calloc	libft/ft_calloc.c	/^void	*ft_calloc(size_t count, size_t size)$/
ft_char_repeat	utils/ft_putnbr_base.c	/^int	ft_char_repeat(char *str1, char *str2)$/
ft_charexist	libftprintf.c	/^static int	ft_charexist(char c, char const *set)$/
ft_check_base	utils/ft_putnbr_base.c	/^int	ft_check_base(char *base)$/
ft_isalnum	libft/ft_isalnum.c	/^int	ft_isalnum(int c)$/
ft_isalpha	libft/ft_isalpha.c	/^int	ft_isalpha(int c)$/
ft_isascii	libft/ft_isascii.c	/^int	ft_isascii(int c)$/
ft_isdigit	libft/ft_isdigit.c	/^int	ft_isdigit(int c)$/
ft_isprint	libft/ft_isprint.c	/^int	ft_isprint(int c)$/
ft_isspace	libft/ft_atoi.c	/^static unsigned int	ft_isspace(char sp)$/
ft_itoa	libft/ft_itoa.c	/^char	*ft_itoa(int n)$/
ft_itoa_negative	libft/ft_itoa.c	/^static char	*ft_itoa_negative(long long n)$/
ft_itoa_positive	libft/ft_itoa.c	/^static char	*ft_itoa_positive(int n)$/
ft_lstadd_back	libft/ft_lstadd_back.c	/^void	ft_lstadd_back(t_list **lst, t_list *new)$/
ft_lstadd_front	libft/ft_lstadd_front.c	/^void	ft_lstadd_front(t_list **lst, t_list *new)$/
ft_lstclear	libft/ft_lstclear.c	/^void	ft_lstclear(t_list **lst, void (*del)(void *)/
ft_lstdelone	libft/ft_lstdelone.c	/^void	ft_lstdelone(t_list *lst, void (*del)(void*))/
ft_lstiter	libft/ft_lstiter.c	/^void	ft_lstiter(t_list *lst, void (*f)(void *))$/
ft_lstlast	libft/ft_lstlast.c	/^t_list	*ft_lstlast(t_list *lst)$/
ft_lstmap	libft/ft_lstmap.c	/^t_list	*ft_lstmap(t_list *lst, void *(*f)(void *),/
ft_lstnew	libft/ft_lstnew.c	/^t_list	*ft_lstnew(void *content)$/
ft_lstsize	libft/ft_lstsize.c	/^int	ft_lstsize(t_list *lst)$/
ft_memchr	libft/ft_memchr.c	/^void	*ft_memchr(const void *s, int c, size_t n)$/
ft_memcmp	libft/ft_memcmp.c	/^int	ft_memcmp(const void *s1, const void *s2, size/
ft_memcpy	libft/ft_memcpy.c	/^void	*ft_memcpy(void *dst, const void *src, size_t/
ft_memmove	libft/ft_memmove.c	/^void	*ft_memmove(void *dst, const void *src, size_/
ft_memset	libft/ft_memset.c	/^void	*ft_memset(void *b, int c, size_t len)$/
ft_printf	libftprintf.c	/^int ft_printf(const char *s, ...)$/
ft_putchar_fd	libft/ft_putchar_fd.c	/^void	ft_putchar_fd(char c, int fd)$/
ft_putendl_fd	libft/ft_putendl_fd.c	/^void	ft_putendl_fd(char *s, int fd)$/
ft_putnbr_base	utils/ft_putnbr_base.c	/^void	ft_putnbr_base(int nbr, char *base)$/
ft_putnbr_fd	libft/ft_putnbr_fd.c	/^void	ft_putnbr_fd(int n, int fd)$/
ft_putstr_fd	libft/ft_putstr_fd.c	/^void	ft_putstr_fd(char *s, int fd)$/
ft_split	libft/ft_split.c	/^char	**ft_split(char const *s, char c)$/
ft_strchr	libft/ft_strchr.c	/^char	*ft_strchr(const char *s, int c)$/
ft_strdup	libft/ft_strdup.c	/^char	*ft_strdup(const char *s)$/
ft_striteri	libft/ft_striteri.c	/^void	ft_striteri(char *s, void (*f)(unsigned int, /
ft_strjoin	libft/ft_strjoin.c	/^char	*ft_strjoin(char const *s1, char const *s2)$/
ft_strlcat	libft/ft_strlcat.c	/^size_t	ft_strlcat(char *dst, const char *src, size/
ft_strlcpy	libft/ft_strlcpy.c	/^size_t	ft_strlcpy(char *dst, const char *src, size/
ft_strlen	libft/ft_strlen.c	/^size_t	ft_strlen(const char *s)$/
ft_strmapi	libft/ft_strmapi.c	/^char	*ft_strmapi(char const *s, char (*f)(unsigned/
ft_strncmp	libft/ft_strncmp.c	/^int	ft_strncmp(const char *s1, const char *s2, siz/
ft_strnstr	libft/ft_strnstr.c	/^char	*ft_strnstr(const char *haystack, const char /
ft_strrchr	libft/ft_strrchr.c	/^char	*ft_strrchr(const char *s, int c)$/
ft_strtrim	libft/ft_strtrim.c	/^char	*ft_strtrim(char const *s, char const *set)$/
ft_substr	libft/ft_substr.c	/^char	*ft_substr(char const *s, unsigned int start,/
ft_tolower	libft/ft_tolower.c	/^int	ft_tolower(int c)$/
ft_toupper	libft/ft_toupper.c	/^int	ft_toupper(int c)$/
print_type	libftprintf.c	/^void print_type (char type, va_list arg)$/
